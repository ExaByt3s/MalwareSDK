#pragma once

#include <common/string.h>

#include <ShlObj.h> //fixme
#define ID_DESKTOP_FOLDER		FOLDERID_Desktop				// <desktop>
#define ID_INTERNET_FOLDER		FOLDERID_InternetFolder			// Internet Explorer (icon on desktop)



namespace paths
{


	/**
	 * \brief
	 * \param rfid
	 * \param dwFlags
	 * \param ppszPath
	 * \return
	 */
	bool GetKnownFolderPath(const KNOWNFOLDERID & rfid, DWORD dwFlags, wchar_t* ppszPath);


	/**
	 * \brief
	 * \param rfid
	 * \param dwFlags
	 * \param ppszPath
	 * \return
	 */
	bool GetKnownFolderPath(const KNOWNFOLDERID & rfid, DWORD dwFlags, char* ppszPath);


	/**
	 * \brief
	 * \param rfid
	 * \param dwFlags
	 * \param lpPathString
	 * \return
	 */
	bool GetKnownFolderPath(const KNOWNFOLDERID & rfid, DWORD dwFlags, UNICODE_PATH& lpPathString);


	/**
	 * \brief
	 * \param rfid
	 * \param dwFlags
	 * \param lpPathString
	 * \return
	 */
	bool GetKnownFolderPath(const KNOWNFOLDERID & rfid, DWORD dwFlags, ANSI_PATH&  lpPathString);


	/**
	 * \brief
	 * \param pszPath
	 * \param pszMore
	 * \return
	 */
	bool Append(char* pszPath, const char* pszMore);


	/**
	 * \brief
	 * \param pszPath
	 * \param pszMore
	 * \return
	 */
	bool Append(wchar_t* pszPath, const wchar_t* pszMore);

	bool Combine(char* pszDest, const char* pszDir, const char* pszFile);

	bool Combine(wchar_t* pszDest, const wchar_t* pszDir, const wchar_t* pszFile);

	/**
	 * \brief
	 * \param dest
	 * \param path
	 * \param file
	 * \return
	 */
	bool MakeFilePath(char* dest, const char* path, const char* file);

	/**
	 * \brief
	 * \param dest
	 * \param path
	 * \param file
	 * \return
	 */
	bool MakeFilePath(wchar_t* dest, const wchar_t* path, const wchar_t* file);


	/**
	 * \brief 
	 * \param pszPath 
	 * \return 
	 */
	char* FindFileName(const char* pszPath);


	/**
	 * \brief 
	 * \param pszPath 
	 * \return 
	 */
	wchar_t* FindFileName(const wchar_t* pszPath);


	/**
	 * \brief
	 * \param path
	 * \return
	 */
	char* FindExtension(const char* path);



	/**
	 * \brief
	 * \param path
	 * \return
	 */
	wchar_t* FindExtension(const wchar_t* path);


	/**
	 * \brief
	 * \param path
	 * \return
	 */
	UNICODE_PATH& FindExtension(UNICODE_PATH& path);

	/**
	 * \brief
	 * \param path
	 * \return
	 */
	ANSI_PATH& FindExtension(ANSI_PATH& path);

	/**
	  * \brief
	  * \param pszPath
	  * \param pszSpec
	  * \return
	  */
	bool MatchSpec(const char* pszPath, const char* pszSpec);


	/**
	 * \brief
	 * \param pszPath
	 * \param pszSpec
	 * \return
	 */
	bool MatchSpec(const wchar_t* pszPath, const wchar_t* pszSpec);
}
