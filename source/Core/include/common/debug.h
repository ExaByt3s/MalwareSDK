#pragma once

#include <common/base_types.h>


#if _DEBUG
#	define OUT_DEBUG_INFO(f,...)			DbgPrint(__FUNCDNAME__,  __FILE__, __LINE__, DEBUG_INFO_T,		L##f, __VA_ARGS__)
#	define OUT_DEBUG_WARNING(f,...)			DbgPrint(__FUNCDNAME__,  __FILE__, __LINE__, DEBUG_WARNING_T,	L##f, __VA_ARGS__)
#	define OUT_DEBUG_ERROR(f,...)			DbgPrint(__FUNCDNAME__,  __FILE__, __LINE__, DEBUG_ERROR_T,		L##f, __VA_ARGS__)
#else
#	define OUT_DEBUG_INFO(f,...)			
#	define OUT_DEBUG_WARNING(f,...)			
#	define OUT_DEBUG_ERROR(f,...)
#endif




enum
{
	DEBUG_INFO_T,    
	DEBUG_WARNING_T, 
	DEBUG_ERROR_T   
};


class DbgPrint
{
public:
	DbgPrint(LPSTR pstrFuncName, LPSTR pstrSourceFile, DWORD dwLineNumber, BYTE bType, LPWSTR pstrFormat, ...);
	~DbgPrint();

private:
	void writte(LPSTR strFuncName, LPSTR strSourceFile, DWORD line, BYTE bType, LPWSTR pstrFormat, va_list arglist);
private:

	DWORD dwPID;        //PID
	DWORD dwTID;        //TID
	DWORD dwTickCount;  //GetTickCount()

	char FunctionName[50];
	char SourceFile[50];
	DWORD dwLineNumber;

	LPWSTR buffer;
};

