#pragma once
#include  <winhttp.h>



class winhttp
{
public:
	static HRESULT WinhttpError();

	static HRESULT AddRequestHeaders(HINTERNET request, wchar_t* headers, int length, uint32_t modifiers);

	static HRESULT DetectAutoProxyConfigUrl(uint32_t flags, wchar_t* auto_config_url);

	static HRESULT GetDefaultProxyConfiguration(ProxyInfo* proxy_info);

	static HRESULT GetProxyForUrl(HINTERNET session, const wchar_t* url, const AutoProxyOptions* proxy_options, ProxyInfo* proxy_info);

	static HRESULT Connect(HINTERNET session, const wchar_t* server, int port, HINTERNET* connection);

	static HRESULT Open(const wchar_t* user_agent, uint32_t access_type, const wchar_t* proxy_name, const wchar_t* proxy_bypass, DWORD flags, HINTERNET* session_handle);

	static HRESULT OpenRequest(HINTERNET connection, const wchar_t* verbose, const wchar_t* uri, const wchar_t* version, const wchar_t* referrer, const wchar_t** accept_types, uint32_t flags, HINTERNET* request_handle);

	static HRESULT SendRequest(HINTERNET request_handle, const wchar_t* headers, DWORD headers_length, const void* optional_data, DWORD optional_data_length, DWORD content_length, DWORD_PTR context);

	static HRESULT ReceiveResponse(HINTERNET request_handle);

	static  HRESULT CrackUrl(const wchar_t* url, uint32_t flags, wchar_t* scheme, wchar_t* server, int* port, wchar_t* url_path, wchar_t* extra_info);

	static  HRESULT SetOption(HINTERNET handle, uint32_t option, const void* buffer, DWORD length);

	static HRESULT SetOptionInt(HINTERNET handle, uint32_t option, int value);

	static HRESULT QueryHeaders(HINTERNET request_handle, uint32_t info_level, const TCHAR* name, void* buffer, DWORD* buffer_length, DWORD* index);

	static HRESULT QueryHeadersInt(HINTERNET request_handle, uint32_t info_level, const TCHAR* name, int* value, DWORD* index);

	static 	HRESULT QueryDataAvailable(HINTERNET request_handle, DWORD* num_bytes);

	static HRESULT ReadData(HINTERNET request_handle, void* buffer, DWORD buffer_length, DWORD* bytes_read);

private:
	template <typename T>
	static  HRESULT SetOptionT(HINTERNET handle, uint32_t option, T value);



};