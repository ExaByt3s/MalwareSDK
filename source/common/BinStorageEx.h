#pragma once

#include "crypt.h"


namespace BinStorage
{

	class BinStorageEx
	{
	public:
		BinStorageEx();
		~BinStorageEx();

		bool add(DWORD id, DWORD flags, void *data, DWORD dataSize);
		bool add(DWORD id, DWORD flags, LPSTR string);
		bool add(DWORD id, DWORD flags, LPWSTR string);

		bool modify(DWORD itemID, DWORD flags, void *data, DWORD dataSize);


		size_t size() const;
		size_t count() const;
	private:


		static ITEM* get_next_item(const STORAGE* binStorage, ITEM* current);
		static ITEM* get_item(const STORAGE* binStorage, DWORD id, DWORD isFlag);
		bool modify_internal(ITEM* item, DWORD flags, void* data, DWORD dataSize);
		static bool add_internal(STORAGE* binStorage, DWORD id, DWORD flags, void* data, DWORD dataSize);

		void reallocate();
		void initialize();
		void relase(size_t nCount);
		void resize_internal_count(size_t size) const;
		void reallocate(size_t size);


	private:
		STORAGE * binStorage;
	};

}
